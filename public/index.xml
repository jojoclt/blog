<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jojonosaurus</title>
    <link>//localhost:1313/</link>
    <description>Recent content on Jojonosaurus</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Â© 2025 Jojo Chalanthorn</copyright>
    <lastBuildDate>Sat, 05 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Extract Gradle Dependencies for Mobile App Security (MAS)</title>
      <link>//localhost:1313/posts/mas-report/</link>
      <pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/posts/mas-report/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Introduction 
    &lt;div id=&#34;introduction&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#introduction&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;I had the chance to work on an app that required a security test based on OWASP guidelines. Based on the requirement, I was asked to export a list of all the dependencies used in the app in the format &lt;code&gt;name|version|source&lt;/code&gt;. Since I was using version.toml with Gradleâ€™s Version Catalog, getting everything into that format wasnâ€™t straightforward. At first, I just used an LLM to help with the formattingâ€”but along the way, I discovered a much simpler approach worth sharing.&lt;/p&gt;</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="//localhost:1313/posts/mas-report/featured.webp" />
    </item>
    
    <item>
      <title>Why Destructuring is Dangerous in Compose</title>
      <link>//localhost:1313/posts/post-lite-one/</link>
      <pubDate>Wed, 04 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/posts/post-lite-one/</guid>
      <description>Despite the official documentation says the syntax are equivalent, but it is not, here&amp;rsquo;s why.</description>
      
    </item>
    
    <item>
      <title>Type-Safe Navigation in Jetpack Compose</title>
      <link>//localhost:1313/posts/type-safe-navigation-compose/</link>
      <pubDate>Wed, 21 May 2025 16:00:28 +0800</pubDate>
      
      <guid>//localhost:1313/posts/type-safe-navigation-compose/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;What You&amp;rsquo;ll Learn 
    &lt;div id=&#34;what-youll-learn&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#what-youll-learn&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Setting up type-safe navigation with Kotlin Serialization&lt;/li&gt;
&lt;li&gt;Creating serializable route classes&lt;/li&gt;
&lt;li&gt;Navigation between screens&lt;/li&gt;
&lt;li&gt;Benefits over string-based navigation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 class=&#34;relative group&#34;&gt;Topics 
    &lt;div id=&#34;topics&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#topics&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@Serializable data classes for routes&lt;/li&gt;
&lt;li&gt;NavHost setup with type-safe routes&lt;/li&gt;
&lt;li&gt;Navigation with arguments&lt;/li&gt;
&lt;li&gt;Best practices and gotchas&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 class=&#34;relative group&#34;&gt;Library Requirement 
    &lt;div id=&#34;library-requirement&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#library-requirement&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Navigation Compose version &amp;gt;= 2.8.0 and version &amp;lt; 3.0.0 (Updated June 2025, Google have released a new Navigation3 Library for Jetpack Compose which is now in alpha with better backstack handling and some breaking changes.)&lt;/li&gt;
&lt;li&gt;KotlinX.Serialization&lt;/li&gt;
&lt;/ul&gt;</description>
      
    </item>
    
    <item>
      <title>ðŸš§Integrating Deep Links with Type-Safe Navigation Compose (and custom parsing) and fcm</title>
      <link>//localhost:1313/posts/deep-link-fcm/</link>
      <pubDate>Sat, 21 Dec 2024 16:00:28 +0800</pubDate>
      
      <guid>//localhost:1313/posts/deep-link-fcm/</guid>
      <description>&lt;blockquote&gt;
&lt;h2 class=&#34;relative group&#34;&gt;This Post is being built 
    &lt;div id=&#34;this-post-is-being-built&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#this-post-is-being-built&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;By using deep links, you can jump from the notifications to a certain routes in NavGraph or even Nested Graph&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>One to One vs. One to Many: Navigating Scaffold Strategies in Jetpack Compose</title>
      <link>//localhost:1313/posts/bottom-nav-shared-transition/</link>
      <pubDate>Sat, 02 Nov 2024 17:20:49 +0800</pubDate>
      
      <guid>//localhost:1313/posts/bottom-nav-shared-transition/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Introduction 
    &lt;div id=&#34;introduction&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#introduction&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Hello Navigation
Scaffold, NavHost
Nested Graph&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
